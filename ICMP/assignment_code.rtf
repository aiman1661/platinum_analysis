{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red183\green111\blue179;\red23\green23\blue23;\red202\green202\blue202;
\red67\green192\blue160;\red212\green214\blue154;\red194\green126\blue101;\red70\green137\blue204;\red140\green211\blue254;
\red167\green197\blue152;\red89\green138\blue67;\red196\green83\blue86;\red205\green173\blue106;}
{\*\expandedcolortbl;;\cssrgb\c77255\c52549\c75294;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c30588\c78824\c69020;\cssrgb\c86275\c86275\c66667;\cssrgb\c80784\c56863\c47059;\cssrgb\c33725\c61176\c83922;\cssrgb\c61176\c86275\c99608;
\cssrgb\c70980\c80784\c65882;\cssrgb\c41569\c60000\c33333;\cssrgb\c81961\c41176\c41176;\cssrgb\c84314\c72941\c49020;}
\paperw11900\paperh16840\margl1440\margr1440\vieww32120\viewh19900\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 numpy\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf5 \strokec5 np\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 matplotlib\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 pyplot\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf5 \strokec5 plt\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 pandas\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf5 \strokec5 pd\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 pandas\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 DataFrame\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf5 \strokec5 df\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 dataframe_image\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf5 \strokec5 dfi\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 pd\cf4 \strokec4 .\cf6 \strokec6 set_option\cf4 \strokec4 (\cf7 \strokec7 'expand_frame_repr'\cf4 \strokec4 , \cf8 \strokec8 False\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 sin\cf4 \strokec4  = \cf5 \strokec5 np\cf4 \strokec4 .\cf9 \strokec9 sin\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9 rad\cf4 \strokec4  = \cf5 \strokec5 np\cf4 \strokec4 .\cf9 \strokec9 radians\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9 sqrt\cf4 \strokec4  = \cf5 \strokec5 np\cf4 \strokec4 .\cf9 \strokec9 sqrt\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 def\cf4 \strokec4  \cf6 \strokec6 sqrt_ind\cf4 \strokec4 (\cf9 \strokec9 miller_list\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf7 \strokec7 "Calculate the sqrt of square sum of miller indices and put in dictionary"\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 sqrt_sum\cf4 \strokec4  = []\cb1 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4  \cf9 \strokec9 hkl\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf9 \strokec9 miller_list\cf4 \strokec4 :\cb1 \
\cb3         \cf9 \strokec9 g_hkl\cf4 \strokec4  = \cf9 \strokec9 sqrt\cf4 \strokec4 (\cf9 \strokec9 hkl\cf4 \strokec4 [\cf10 \strokec10 0\cf4 \strokec4 ]**\cf10 \strokec10 2\cf4 \strokec4  + \cf9 \strokec9 hkl\cf4 \strokec4 [\cf10 \strokec10 1\cf4 \strokec4 ]**\cf10 \strokec10 2\cf4 \strokec4  + \cf9 \strokec9 hkl\cf4 \strokec4 [\cf10 \strokec10 2\cf4 \strokec4 ]**\cf10 \strokec10 2\cf4 \strokec4 )\cb1 \
\cb3         \cf9 \strokec9 sqrt_sum\cf4 \strokec4 .\cf6 \strokec6 append\cf4 \strokec4 (\cf9 \strokec9 g_hkl\cf4 \strokec4 )\cb1 \
\
\cb3     \cf2 \strokec2 return\cf4 \strokec4  \cf9 \strokec9 sqrt_sum\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 def\cf4 \strokec4  \cf6 \strokec6 hkl_generator\cf4 \strokec4 (\cf9 \strokec9 index\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf7 \strokec7 "Calculate possible miller indices (hkl and order"\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 miller_list\cf4 \strokec4  = []\cb1 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4  \cf9 \strokec9 i\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf9 \strokec9 index\cf4 \strokec4 :\cb1 \
\cb3         \cf9 \strokec9 h\cf4 \strokec4  = \cf9 \strokec9 i\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 for\cf4 \strokec4  \cf9 \strokec9 j\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf9 \strokec9 index\cf4 \strokec4 :\cb1 \
\cb3             \cf9 \strokec9 k\cf4 \strokec4  = \cf9 \strokec9 j\cf4 \strokec4  \cb1 \
\cb3             \cf2 \strokec2 for\cf4 \strokec4  \cf9 \strokec9 m\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf9 \strokec9 index\cf4 \strokec4 :\cb1 \
\cb3                 \cf9 \strokec9 l\cf4 \strokec4  = \cf9 \strokec9 m\cf4 \cb1 \strokec4 \
\cb3                 \cf9 \strokec9 miller_ind\cf4 \strokec4  = [\cf9 \strokec9 h\cf4 \strokec4 ,\cf9 \strokec9 k\cf4 \strokec4 ,\cf9 \strokec9 l\cf4 \strokec4 ]\cb1 \
\cb3                 \cf9 \strokec9 miller_list\cf4 \strokec4 .\cf6 \strokec6 append\cf4 \strokec4 (\cf9 \strokec9 miller_ind\cf4 \strokec4 )\cb1 \
\
\cb3     \cf2 \strokec2 for\cf4 \strokec4  \cf9 \strokec9 plane\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf9 \strokec9 miller_list\cf4 \strokec4 :\cb1 \
\cb3         \cf9 \strokec9 plane\cf4 \strokec4 .sort()\cb1 \
\cb3     \cb1 \
\cb3     \cf9 \strokec9 res_miller_list\cf4 \strokec4  = [] \cf11 \strokec11 # Unique (hkl) up to permutation and negatives\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 for\cf4 \strokec4  \cf9 \strokec9 plane\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf9 \strokec9 miller_list\cf4 \strokec4 :\cb1 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  \cf9 \strokec9 plane\cf4 \strokec4  \cf8 \strokec8 not\cf4 \strokec4  \cf8 \strokec8 in\cf4 \strokec4  \cf9 \strokec9 res_miller_list\cf4 \strokec4 :\cb1 \
\cb3             \cf9 \strokec9 res_miller_list\cf4 \strokec4 .\cf6 \strokec6 append\cf4 \strokec4 (\cf9 \strokec9 plane\cf4 \strokec4 )\cb1 \
\
\cb3     \cf2 \strokec2 return\cf4 \strokec4  \cf9 \strokec9 res_miller_list\cf4 \strokec4 [\cf10 \strokec10 1\cf4 \strokec4 :]\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 def\cf4 \strokec4  \cf6 \strokec6 fcc_indices\cf4 \strokec4 (\cf9 \strokec9 miller_list\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf7 \strokec7 "Listing possible fcc miller indices"\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 final_list\cf4 \strokec4  = []\cb1 \
\
\cb3     \cf2 \strokec2 for\cf4 \strokec4  \cf9 \strokec9 plane\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf9 \strokec9 miller_list\cf4 \strokec4 :\cb1 \
\cb3         \cf9 \strokec9 odd_counter\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 even_counter\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 for\cf4 \strokec4  \cf9 \strokec9 i\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf9 \strokec9 plane\cf4 \strokec4 :\cb1 \
\cb3             \cf2 \strokec2 if\cf4 \strokec4  (\cf9 \strokec9 i\cf4 \strokec4  % \cf10 \strokec10 2\cf4 \strokec4 ) == \cf10 \strokec10 0\cf4 \strokec4 :\cb1 \
\cb3                 \cf9 \strokec9 even_counter\cf4 \strokec4  += \cf10 \strokec10 1\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 else\cf4 \strokec4 :\cb1 \
\cb3                 \cf9 \strokec9 odd_counter\cf4 \strokec4  += \cf10 \strokec10 1\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  \cf9 \strokec9 even_counter\cf4 \strokec4  == \cf10 \strokec10 3\cf4 \strokec4  \cf8 \strokec8 or\cf4 \strokec4  \cf9 \strokec9 odd_counter\cf4 \strokec4  == \cf10 \strokec10 3\cf4 \strokec4 :\cb1 \
\cb3             \cf9 \strokec9 final_list\cf4 \strokec4 .\cf6 \strokec6 append\cf4 \strokec4 (\cf9 \strokec9 plane\cf4 \strokec4 )\cb1 \
\
\cb3     \cf2 \strokec2 return\cf4 \strokec4  \cf9 \strokec9 final_list\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 def\cf4 \strokec4  \cf6 \strokec6 bcc_indices\cf4 \strokec4 (\cf9 \strokec9 miller_list\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf7 \strokec7 "Listing possible bcc miller indices"\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 final_list\cf4 \strokec4  = []\cb1 \
\
\cb3     \cf2 \strokec2 for\cf4 \strokec4  \cf9 \strokec9 plane\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf9 \strokec9 miller_list\cf4 \strokec4 :\cb1 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  \cf6 \strokec6 sum\cf4 \strokec4 (\cf9 \strokec9 plane\cf4 \strokec4 ) % \cf10 \strokec10 2\cf4 \strokec4  == \cf10 \strokec10 0\cf4 \strokec4 :\cb1 \
\cb3             \cf9 \strokec9 final_list\cf4 \strokec4 .\cf6 \strokec6 append\cf4 \strokec4 (\cf9 \strokec9 plane\cf4 \strokec4 )\cb1 \
\
\cb3     \cf2 \strokec2 return\cf4 \strokec4  \cf9 \strokec9 final_list\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 def\cf4 \strokec4  \cf6 \strokec6 lattice_param_a\cf4 \strokec4 (\cf9 \strokec9 d_space\cf4 \strokec4 , \cf9 \strokec9 hkl_list\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf7 \strokec7 "Calculate values of lattice parameter using hkl"\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 param_a_list\cf4 \strokec4  = []\cb1 \
\cb3     \cf2 \strokec2 for\cf4 \strokec4  \cf9 \strokec9 plane\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf9 \strokec9 hkl_list\cf4 \strokec4 :\cb1 \
\cb3         \cf9 \strokec9 a\cf4 \strokec4  = \cf9 \strokec9 d_space\cf4 \strokec4  * \cf9 \strokec9 sqrt\cf4 \strokec4 (\cf9 \strokec9 plane\cf4 \strokec4 [\cf10 \strokec10 0\cf4 \strokec4 ]**\cf10 \strokec10 2\cf4 \strokec4  + \cf9 \strokec9 plane\cf4 \strokec4 [\cf10 \strokec10 1\cf4 \strokec4 ]**\cf10 \strokec10 2\cf4 \strokec4  + \cf9 \strokec9 plane\cf4 \strokec4 [\cf10 \strokec10 2\cf4 \strokec4 ]**\cf10 \strokec10 2\cf4 \strokec4 )\cb1 \
\cb3         \cf9 \strokec9 param_a_list\cf4 \strokec4 .\cf6 \strokec6 append\cf4 \strokec4 (\cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 array\cf4 \strokec4 (\cf9 \strokec9 a\cf4 \strokec4 ))\cb1 \
\
\cb3     \cf2 \strokec2 return\cf4 \strokec4  \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 array\cf4 \strokec4 (\cf9 \strokec9 param_a_list\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 def\cf4 \strokec4  \cf6 \strokec6 plotter\cf4 \strokec4 (\cf9 \strokec9 d_space\cf4 \strokec4 , \cf9 \strokec9 miller_ind\cf4 \strokec4 , \cf9 \strokec9 a_params\cf4 \strokec4 , \cf9 \strokec9 title\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf7 \strokec7 "Plot the data for either bcc or fcc, and create dataframes"\cf4 \cb1 \strokec4 \
\
\cb3     \cf9 \strokec9 y_axis_data\cf4 \strokec4  = \cf9 \strokec9 a_params\cf4 \cb1 \strokec4 \
\
\cb3     \cf9 \strokec9 fig\cf4 \strokec4 , \cf9 \strokec9 ax\cf4 \strokec4  = \cf5 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 subplots\cf4 \strokec4 (\cf9 \strokec9 figsize\cf4 \strokec4 =(\cf10 \strokec10 10\cf4 \strokec4 ,\cf10 \strokec10 5\cf4 \strokec4 ))\cb1 \
\
\cb3     \cf9 \strokec9 x_axis_labels\cf4 \strokec4  = [\cf8 \strokec8 f\cf7 \strokec7 '(\cf8 \strokec8 \{\cf9 \strokec9 x\cf4 \strokec4 [\cf10 \strokec10 0\cf4 \strokec4 ]\cf8 \strokec8 \}\cf7 \strokec7 , \cf8 \strokec8 \{\cf9 \strokec9 x\cf4 \strokec4 [\cf10 \strokec10 1\cf4 \strokec4 ]\cf8 \strokec8 \}\cf7 \strokec7 , \cf8 \strokec8 \{\cf9 \strokec9 x\cf4 \strokec4 [\cf10 \strokec10 2\cf4 \strokec4 ]\cf8 \strokec8 \}\cf7 \strokec7 )'\cf4 \strokec4  \cf2 \strokec2 for\cf4 \strokec4  \cf9 \strokec9 x\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf9 \strokec9 miller_ind\cf4 \strokec4 ]\cb1 \
\
\cb3     \cf9 \strokec9 dataframe_list\cf4 \strokec4  = []\cb1 \
\cb3     \cf9 \strokec9 g_hkl\cf4 \strokec4  = \cf6 \strokec6 sqrt_ind\cf4 \strokec4 (\cf9 \strokec9 miller_ind\cf4 \strokec4 )\cb1 \
\cb3     \cf9 \strokec9 dataframe_g_hkl\cf4 \strokec4  = \cf5 \strokec5 df\cf4 \strokec4 (\cf9 \strokec9 data\cf4 \strokec4  = \cf9 \strokec9 g_hkl\cf4 \strokec4 , \cf9 \strokec9 index\cf4 \strokec4  = \cf9 \strokec9 x_axis_labels\cf4 \strokec4 , \cf9 \strokec9 columns\cf4 \strokec4  = [\cf7 \strokec7 "g_hkl"\cf4 \strokec4 ])\cb1 \
\
\cb3     \cf2 \strokec2 for\cf4 \strokec4  \cf9 \strokec9 i\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  \cf5 \strokec5 range\cf4 \strokec4 (\cf9 \strokec9 a_params\cf4 \strokec4 .shape[\cf10 \strokec10 1\cf4 \strokec4 ]):\cb1 \
\cb3         \cf9 \strokec9 y_axis\cf4 \strokec4  = \cf9 \strokec9 y_axis_data\cf4 \strokec4 [:,\cf9 \strokec9 i\cf4 \strokec4 ]\cb1 \
\cb3         \cf5 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 scatter\cf4 \strokec4 (\cf9 \strokec9 x_axis_labels\cf4 \strokec4 ,\cf9 \strokec9 y_axis\cf4 \strokec4 , \cf9 \strokec9 label\cf4 \strokec4 =\cf8 \strokec8 f\cf7 \strokec7 'd=\cf8 \strokec8 \{\cf9 \strokec9 d_space\cf4 \strokec4 [\cf9 \strokec9 i\cf4 \strokec4 ]\cf8 \strokec8 \}\cf7 \strokec7 '\cf4 \strokec4 , \cf9 \strokec9 marker\cf4 \strokec4 =\cf7 \strokec7 'x'\cf4 \strokec4 )\cb1 \
\
\cb3         \cf9 \strokec9 dataframe\cf4 \strokec4  = \cf5 \strokec5 df\cf4 \strokec4 (\cf9 \strokec9 data\cf4 \strokec4  = \cf9 \strokec9 y_axis\cf4 \strokec4 , \cf9 \strokec9 index\cf4 \strokec4  = \cf9 \strokec9 x_axis_labels\cf4 \strokec4 , \cf9 \strokec9 columns\cf4 \strokec4  = [\cf8 \strokec8 f\cf7 \strokec7 'd=\cf8 \strokec8 \{\cf9 \strokec9 d_space\cf4 \strokec4 [\cf9 \strokec9 i\cf4 \strokec4 ]\cf8 \strokec8 \}\cf7 \strokec7 '\cf4 \strokec4 ])\cb1 \
\cb3         \cf9 \strokec9 dataframe_list\cf4 \strokec4 .\cf6 \strokec6 append\cf4 \strokec4 (\cf9 \strokec9 dataframe\cf4 \strokec4 )\cb1 \
\
\cb3     \cf9 \strokec9 ax\cf4 \strokec4 .set_xlabel(\cf7 \strokec7 '(h k l)'\cf4 \strokec4 )\cb1 \
\cb3     \cf9 \strokec9 ax\cf4 \strokec4 .set_ylabel(\cf8 \strokec8 r\cf12 \strokec12 'Lattice parameter, a \cf7 \strokec7 (\cf12 \strokec12 $\\AA$\cf7 \strokec7 )\cf12 \strokec12 '\cf4 \strokec4 )\cb1 \
\cb3     \cf9 \strokec9 ax\cf4 \strokec4 .set_title(\cf8 \strokec8 f\cf7 \strokec7 '\cf8 \strokec8 \{\cf9 \strokec9 title\cf8 \strokec8 \}\cf7 \strokec7 '\cf4 \strokec4 )\cb1 \
\cb3     \cf9 \strokec9 ax\cf4 \strokec4 .legend(\cf9 \strokec9 loc\cf4 \strokec4 =\cf7 \strokec7 'center left'\cf4 \strokec4 , \cf9 \strokec9 bbox_to_anchor\cf4 \strokec4 =(\cf10 \strokec10 1\cf4 \strokec4 ,\cf10 \strokec10 0.5\cf4 \strokec4 ), \cf9 \strokec9 fancybox\cf4 \strokec4 =\cf8 \strokec8 True\cf4 \strokec4 , \cf9 \strokec9 shadow\cf4 \strokec4 =\cf8 \strokec8 True\cf4 \strokec4 )\cb1 \
\cb3     \cf5 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 xticks\cf4 \strokec4 (\cf9 \strokec9 rotation\cf4 \strokec4 =\cf10 \strokec10 45\cf4 \strokec4 )  \cf11 \strokec11 # Rotate x-axis labels for clarity\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 tight_layout\cf4 \strokec4 ()\cb1 \
\cb3     \cf5 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 show\cf4 \strokec4 ()\cb1 \
\
\cb3     \cf9 \strokec9 full_df\cf4 \strokec4  = \cf9 \strokec9 dataframe_g_hkl\cf4 \strokec4 .\cf6 \strokec6 join\cf4 \strokec4 (\cf9 \strokec9 dataframe_list\cf4 \strokec4 [:])\cb1 \
\
\cb3     \cf9 \strokec9 sorted_df\cf4 \strokec4  = \cf9 \strokec9 full_df\cf4 \strokec4 .\cf6 \strokec6 sort_values\cf4 \strokec4 (\cf9 \strokec9 by\cf4 \strokec4  = \cf7 \strokec7 'g_hkl'\cf4 \strokec4 )\cb1 \
\
\cb3     \cf5 \strokec5 dfi\cf4 \strokec4 .\cf6 \strokec6 export\cf4 \strokec4 (\cf9 \strokec9 sorted_df\cf4 \strokec4 .\cf6 \strokec6 drop\cf4 \strokec4 (\cf9 \strokec9 sorted_df\cf4 \strokec4 .\cf9 \strokec9 index\cf4 \strokec4 [\cf10 \strokec10 9\cf4 \strokec4 :]),\cf8 \strokec8 f\cf7 \strokec7 '\cf8 \strokec8 \{\cf9 \strokec9 title\cf8 \strokec8 \}\cf7 \strokec7 .png'\cf4 \strokec4 )\cb1 \
\
\cb3     \cf2 \strokec2 return\cf4 \strokec4  \cf6 \strokec6 print\cf4 \strokec4 (\cf9 \strokec9 sorted_df\cf4 \strokec4 .\cf6 \strokec6 drop\cf4 \strokec4 (\cf9 \strokec9 sorted_df\cf4 \strokec4 .\cf9 \strokec9 index\cf4 \strokec4 [\cf10 \strokec10 9\cf4 \strokec4 :]))\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 def\cf4 \strokec4  \cf6 \strokec6 main\cf4 \strokec4 ():\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf11 \strokec11 # Data and parameter given\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 diff_angle\cf4 \strokec4  = \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 array\cf4 \strokec4 ([\cf10 \strokec10 10.378\cf4 \strokec4 , \cf10 \strokec10 11.992\cf4 \strokec4 , \cf10 \strokec10 16.999\cf4 \strokec4 , \cf10 \strokec10 19.955\cf4 \strokec4 , \cf10 \strokec10 20.858\cf4 \strokec4 , \cf10 \strokec10 24.118\cf4 \strokec4 , \cf10 \strokec10 26.332\cf4 \strokec4 , \cf10 \strokec10 27.019\cf4 \strokec4 , \cf10 \strokec10 29.661\cf4 \strokec4 ]) \cf11 \strokec11 # In degrees, 2theta\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 theta\cf4 \strokec4  = \cf9 \strokec9 diff_angle\cf6 \strokec6 /\cf10 \strokec10 2.0\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 wavelength\cf4 \strokec4  = \cf10 \strokec10 0.41000\cf4 \strokec4  \cf11 \strokec11 # In Angstrom (E-10)\cf4 \cb1 \strokec4 \
\
\cb3     \cf11 \strokec11 # Range of possible miller integers\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 index_set\cf4 \strokec4  = \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 arange\cf4 \strokec4 (\cf10 \strokec10 5\cf4 \strokec4 )\cb1 \
\
\cb3     \cf11 \strokec11 # Use Bragg's law to calculate d-spacing\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 d_space\cf4 \strokec4  = \cf9 \strokec9 wavelength\cf4 \strokec4 /(\cf10 \strokec10 2\cf4 \strokec4 *\cf9 \strokec9 sin\cf4 \strokec4 (\cf9 \strokec9 rad\cf4 \strokec4 (\cf9 \strokec9 theta\cf4 \strokec4 ))) \cf11 \strokec11 # In Angstrom\cf4 \cb1 \strokec4 \
\
\cb3     \cf9 \strokec9 d_space_df\cf4 \strokec4  = \cf5 \strokec5 df\cf4 \strokec4 (\{\cf7 \strokec7 "Diffraction angle"\cf4 \strokec4 : \cf9 \strokec9 diff_angle\cf4 \strokec4 , \cb1 \
\cb3                      \cf7 \strokec7 "d_hkl"\cf4 \strokec4 : \cf9 \strokec9 d_space\cf4 \strokec4 \})\cb1 \
\cb3     \cf6 \strokec6 print\cf4 \strokec4 (\cf9 \strokec9 d_space_df\cf4 \strokec4 )\cb1 \
\cb3     \cf5 \strokec5 dfi\cf4 \strokec4 .\cf6 \strokec6 export\cf4 \strokec4 (\cf9 \strokec9 d_space_df\cf4 \strokec4 ,\cf7 \strokec7 'd_space.png'\cf4 \strokec4 )\cb1 \
\cb3     \cf6 \strokec6 print\cf4 \strokec4 (\cf7 \strokec7 '\cf13 \strokec13 \\n\cf7 \strokec7 '\cf4 \strokec4 )\cb1 \
\
\cb3     \cf11 \strokec11 # List of all possible miller indices\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 miller_list\cf4 \strokec4  = \cf6 \strokec6 hkl_generator\cf4 \strokec4 (\cf9 \strokec9 index_set\cf4 \strokec4 )\cb1 \
\
\cb3     \cf11 \strokec11 # Lists of possible miller indices for fcc and bcc, taking systematic absences into account\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 miller_fcc\cf4 \strokec4  = \cf6 \strokec6 fcc_indices\cf4 \strokec4 (\cf9 \strokec9 miller_list\cf4 \strokec4 )\cb1 \
\cb3     \cf9 \strokec9 miller_bcc\cf4 \strokec4  = \cf6 \strokec6 bcc_indices\cf4 \strokec4 (\cf9 \strokec9 miller_list\cf4 \strokec4 )\cb1 \
\
\cb3     \cf11 \strokec11 # Lattice parameter 'a' values\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 lattice_param_fcc\cf4 \strokec4  = \cf6 \strokec6 lattice_param_a\cf4 \strokec4 (\cf9 \strokec9 d_space\cf4 \strokec4 , \cf9 \strokec9 miller_fcc\cf4 \strokec4 )\cb1 \
\cb3     \cf9 \strokec9 lattice_param_bcc\cf4 \strokec4  = \cf6 \strokec6 lattice_param_a\cf4 \strokec4 (\cf9 \strokec9 d_space\cf4 \strokec4 , \cf9 \strokec9 miller_bcc\cf4 \strokec4 )\cb1 \
\
\cb3     \cf6 \strokec6 print\cf4 \strokec4 (\cf7 \strokec7 'FCC Measurements'\cf4 \strokec4 )\cb1 \
\cb3     \cf6 \strokec6 plotter\cf4 \strokec4 (\cf9 \strokec9 d_space\cf4 \strokec4 ,\cf9 \strokec9 miller_fcc\cf4 \strokec4 ,\cf9 \strokec9 lattice_param_fcc\cf4 \strokec4 , \cf7 \strokec7 'FCC Measurements'\cf4 \strokec4 )\cb1 \
\cb3     \cf6 \strokec6 print\cf4 \strokec4 (\cf7 \strokec7 '\cf13 \strokec13 \\n\cf7 \strokec7 '\cf4 \strokec4 )\cb1 \
\cb3     \cf6 \strokec6 print\cf4 \strokec4 (\cf7 \strokec7 'BCC Measurements'\cf4 \strokec4 )\cb1 \
\cb3     \cf6 \strokec6 plotter\cf4 \strokec4 (\cf9 \strokec9 d_space\cf4 \strokec4 ,\cf9 \strokec9 miller_bcc\cf4 \strokec4 ,\cf9 \strokec9 lattice_param_bcc\cf4 \strokec4 , \cf7 \strokec7 'BCC Measurements'\cf4 \strokec4 )\cb1 \
\cb3     \cf6 \strokec6 print\cf4 \strokec4 (\cf7 \strokec7 '\cf13 \strokec13 \\n\cf7 \strokec7 '\cf4 \strokec4 )\cb1 \
\cb3     \cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 if\cf4 \strokec4  \cf9 \strokec9 __name__\cf4 \strokec4  == \cf7 \strokec7 '__main__'\cf4 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf6 \strokec6 main\cf4 \strokec4 ()\cb1 \
\cb3     \cb1 \
}